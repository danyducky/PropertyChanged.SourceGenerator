namespace PropertyChanged.SourceGenerator;

/// <summary>
/// Solution constants.
/// </summary>
internal class Constants
{
    /// <summary>
    /// Do not notify attribute name.
    /// </summary>
    public static readonly string DoNotNotifyAttributeName = "DoNotNotifyAttribute";

    /// <summary>
    /// Also notify attribute name.
    /// </summary>
    public static readonly string AlsoNotifyAttributeName = "AlsoNotifyAttribute";

    /// <summary>
    /// Autogenerated attributes.
    /// </summary>
    public static readonly string Attributes = """
        namespace PropertyChanged.SourceGenerator
        {
            /// <summary>
            /// Ignore property changed event firing.
            /// </summary>
            [global::System.AttributeUsage(global::System.AttributeTargets.Field, AllowMultiple = false, Inherited = false)]
            [global::System.Diagnostics.Conditional("DEBUG")]
            internal class DoNotNotifyAttribute : global::System.Attribute
            {
            }

            /// <summary>
            /// Notify other properties.
            /// </summary>
            [global::System.AttributeUsage(global::System.AttributeTargets.Field, AllowMultiple = false, Inherited = false)]
            [global::System.Diagnostics.Conditional("DEBUG")]
            internal class AlsoNotifyAttribute : global::System.Attribute
            {
            /// <summary>
            /// Also notify property names.
            /// </summary>
            public string[] PropertyNames { get; }

            /// <summary>
            /// Constructor.
            /// </summary>
            /// <param name="propertyNames">Also notify property names.</param>
            public AlsoNotifyAttribute(params string[] propertyNames)
            {
                PropertyNames = propertyNames;
            }
        }
        }
        """;
}
